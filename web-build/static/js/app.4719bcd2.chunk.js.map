{"version":3,"sources":["assets/spinner.svg","components/weather/weather.jsx","components/text-container/text-container.jsx","components/weather/weather-container.jsx","components/weather-page/weather-page.jsx","redux/actions/types.js","tools/axios.js","tools/requests.js","redux/actions/actions.js","redux/selectors.js","components/weather-page/weather-page-container.jsx","components/table-page/__element/table-page__element.jsx","components/table-page/table-page.jsx","components/table-page/table-page-empty.jsx","components/table-page/table-page-container.jsx","redux/reducers/forecast-reducer.js","redux/reducers/root-reducer.js","redux/store.js","App.js","web-build/register-service-worker.js"],"names":["module","exports","Weather","temp","icon","View","style","styles","container","Text","text","Image","tinyLogo","source","propTypes","PropTypes","number","isRequired","string","StyleSheet","create","padding","width","height","display","flexDirection","alignItems","justifyContent","borderRadius","boxSizing","backgroundColor","fontSize","TextContainer","children","content","content_stub","spinner","node","maxWidth","textAlign","fontWeight","WeatherContainer","weather","WeatherPage","address","coordinates","Latitude","Longitude","object","exact","flex","backgroundImage","types","geocoderAPI","axios","baseURL","weatherAPI","headers","settings","yandexApiKey","getAddressFromCoordinates","latitude","longitude","a","async","url","hereApiKey","get","then","res","data","Response","Result","Location","catch","e","Alert","alert","message","console","error","getWeather","setHistoryToAS","history","AsyncStorage","setItem","JSON","stringify","getHistoryFromAS","getItem","parsedHistory","parse","addToHistory","request","dispatch","setHistory","type","setWeather","historySelector","state","forecast","locationSelector","location","WeatherPageContainer","getForecast","useEffect","func","connect","Geolocation","getCurrentPosition","position","coords","Address","Label","DisplayPosition","fact","time","Date","now","enableHighAccuracy","timeout","maximumAge","TablePageElement","item","onPress","TouchableOpacity","info","toISOString","marginBottom","TablePage","clearHistory","SafeAreaView","list","renderItem","keyExtractor","toString","Button","title","color","arrayOf","paddingTop","alignSelf","TablePageEmpty","useState","openedId","setOpenedId","note","filter","length","id","produce","draft","action","payload","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","Tab","createBottomTabNavigator","App","NavigationContainer","Navigator","initialRouteName","tabBarOptions","activeTintColor","Screen","name","component","options","tabBarLabel","tabBarIcon","size","TablePageContainer","navigator","window","addEventListener","serviceWorker","register","scope"],"mappings":"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","file":"static/js/app.4719bcd2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.4678ba0f.svg\";","import React from \"react\";\r\nimport { StyleSheet, View, Text, Image } from \"react-native\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function Weather({ temp, icon }) {\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.text}>{temp}°C</Text>\r\n      <Image\r\n        style={styles.tinyLogo}\r\n        source={`https://yastatic.net/weather/i/icons/blueye/color/svg/${icon}.svg`}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n\r\nWeather.propTypes = {\r\n  temp: PropTypes.number.isRequired,\r\n  icon: PropTypes.string.isRequired\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    padding: \"20px\",\r\n    width: \"200px\",\r\n    height: \"100px\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    borderRadius: 5,\r\n    boxSizing: \"content-box\",\r\n    backgroundColor: \"rgba(255, 255, 255, 0.2)\",\r\n  },\r\n  tinyLogo: {\r\n    width: 100,\r\n    height: 100,\r\n  },\r\n  text: {\r\n    fontSize: \"2rem\",\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport { StyleSheet, Text, Image } from \"react-native\";\r\nimport spinner from \"../../assets/spinner.svg\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function TextContainer({ children }) {\r\n  if (!children)\r\n    return (\r\n      <Text style={styles.content_stub}>\r\n        <Image style={styles.spinner} source={spinner} />\r\n      </Text>\r\n    );\r\n  return <Text style={styles.content}>{children}</Text>;\r\n}\r\n\r\nTextContainer.propTypes = {\r\n  children: PropTypes.node\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  content: {\r\n    backgroundColor: \"rgba(255, 255, 255, 0.2)\",\r\n    padding: \"5px\",\r\n    borderRadius: \"5px\",\r\n    maxWidth: \"200px\",\r\n    textAlign: \"center\",\r\n    fontSize: \"1.1rem\",\r\n    fontWeight: \"500\",\r\n  },\r\n  content_stub: {\r\n    width: \"240px\",\r\n    height: \"140px\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"rgba(255, 255, 255, 0.2)\",\r\n    padding: \"5px\",\r\n    borderRadius: \"5px\",\r\n    textAlign: \"center\",\r\n    fontSize: \"1.1rem\",\r\n    fontWeight: \"500\",\r\n  },\r\n  spinner: {\r\n    height: \"3rem\",\r\n    width: \"3rem\",\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport Weather from \"./weather\";\r\nimport TextContainer from \"../text-container/text-container\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function WeatherContainer({ weather }) {\r\n  if (!weather) return <TextContainer text={null} />;\r\n  const { icon, temp } = weather;\r\n  return <Weather temp={temp} icon={icon} />;\r\n}\r\n\r\nWeatherContainer.propTypes = {\r\n  weather: PropTypes.object\r\n}","import React from \"react\";\r\nimport { StyleSheet, View } from \"react-native\";\r\nimport WeatherContainer from \"../weather/weather-container\";\r\nimport TextContainer from \"../text-container/text-container\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function WeatherPage({ address, weather, coordinates }) {\r\n  return (\r\n    <View style={styles.container}>\r\n      <WeatherContainer weather={weather} />\r\n      <TextContainer>{address}</TextContainer>\r\n      <TextContainer>\r\n        {coordinates\r\n          ? coordinates.Latitude + \", \" + coordinates.Longitude\r\n          : null}\r\n      </TextContainer>\r\n    </View>\r\n  );\r\n}\r\n\r\nWeatherPage.propTypes = {\r\n  coordinates: PropTypes.exact({\r\n    Latitude: PropTypes.number.isRequired,\r\n    Longitude: PropTypes.number.isRequired,\r\n  }),\r\n  address: PropTypes.string.isRequired,\r\n  weather: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    padding: \"30px\",\r\n    flex: 1,\r\n    backgroundImage: \"linear-gradient(141deg, #a1c4fd 0%, #c2e9fb 75%)\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-evenly\",\r\n  },\r\n});\r\n","export const types = {\r\n    ADD_TO_HISTORY: \"ADD_TO_HISTORY\",\r\n    UPDATE_HISTORY: \"UPDATE_HISTORY\",\r\n    SET_LOCATION: \"SET_LOCATION\",\r\n    SET_WEATHER: \"SET_WEATHER\",\r\n    SET_HISTORY: \"SET_HISTORY\",\r\n    ERROR: \"ERROR\",\r\n    CLEAR_HISTORY: \"CLEAR_HISTORY\"\r\n}","import axios from \"axios\";\r\nimport settings from \"./settings.json\";\r\n\r\nexport const geocoderAPI = axios.create({\r\n  baseURL: \"https://reverse.geocoder.ls.hereapi.com/6.2\",\r\n});\r\n\r\nexport const weatherAPI = axios.create({\r\n  baseURL: \"https://api.weather.yandex.ru/v2\",\r\n  headers: { \"X-Yandex-API-Key\": settings.yandexApiKey },\r\n});","import { geocoderAPI, weatherAPI } from \"./axios\";\r\nimport settings from \"./settings.json\";\r\nimport AsyncStorage from \"@react-native-community/async-storage\";\r\nimport { Alert } from \"react-native\";\r\n\r\nexport const getAddressFromCoordinates = async (latitude, longitude) => {\r\n  const url = `reversegeocode.json?apiKey=${settings.hereApiKey}&mode=retrieveAddresses&language=en&prox=${latitude},${longitude}`;\r\n  return await geocoderAPI\r\n    .get(url)\r\n    .then((res) => res.data.Response.View[0].Result[0].Location)\r\n    .catch((e) => {\r\n      Alert.alert(\"Error(getAddressFromCoordinates)\", e.message);\r\n      console.error(\"Error(getAddressFromCoordinates)\", e.message);\r\n    });\r\n};\r\n\r\nexport const getWeather = async (latitude, longitude) => {\r\n  const url = `forecast?lat=${latitude}&lon=${longitude}&limit=1`;\r\n  return await weatherAPI\r\n    .get(url)\r\n    .then((res) => res.data)\r\n    .catch((e) => {\r\n      Alert.alert(\"Error(getWeather)\", e.message);\r\n      console.error(\"Error(getWeather)\", e.message);\r\n    });\r\n};\r\n\r\nexport const setHistoryToAS = async (history) => {\r\n  try {\r\n    await AsyncStorage.setItem(\"history\", JSON.stringify(history));\r\n  } catch (e) {\r\n    Alert.alert(\"Error(setHistoryToAS)\", e.message);\r\n    console.error(\"Error(setHistoryToAS)\", e.message);\r\n  }\r\n};\r\n\r\nexport const getHistoryFromAS = async () => {\r\n  try {\r\n    const history = await AsyncStorage.getItem(\"history\");\r\n    if (history === null) return [];\r\n    const parsedHistory = history != \"\" ? JSON.parse(history) : [];\r\n    return parsedHistory;\r\n  } catch (e) {\r\n    Alert.alert(\"Error(getHistoryFromAS)\", e.message);\r\n    console.error(\"Error(getHistoryFromAS)\", e.message);\r\n  }\r\n};\r\n\r\nexport const clearHistoryInAS = async () => {\r\n  try {\r\n    await AsyncStorage.setItem(\"history\", []);\r\n  } catch (e) {\r\n    Alert.alert(\"Error(clearHistoryInAS)\", e.message);\r\n    console.error(\"Error(clearHistoryInAS)\", e.message);\r\n  }\r\n};\r\n","import Geolocation from \"react-native-geolocation-service\";\r\nimport { types } from \"./types\";\r\nimport {\r\n  getHistoryFromAS,\r\n  setHistoryToAS,\r\n  getAddressFromCoordinates,\r\n  getWeather,\r\n  clearHistoryInAS,\r\n} from \"../../tools/requests\";\r\nimport { Alert } from \"react-native\";\r\n\r\nexport const updateHistory = () => async (dispatch) => {\r\n  try {\r\n    const history = await getHistoryFromAS();\r\n    dispatch(setHistory(history));\r\n  } catch (e) {\r\n    Alert.alert(\"Error(updateHistory)\", e.message);\r\n  }\r\n};\r\n\r\nexport const addToHistory = (request) => async (dispatch) => {\r\n  try {\r\n    const history = await getHistoryFromAS();\r\n    setHistoryToAS([...history, request]);\r\n    dispatch(updateHistory());\r\n  } catch (e) {\r\n    Alert.alert(\"Error(addToHistory)\", e.message);\r\n    console.error(\"Error(addToHistory)\", e.message);\r\n  }\r\n};\r\n\r\nexport const clearHistory = () => {\r\n  clearHistoryInAS()\r\n  return { type: types.CLEAR_HISTORY };\r\n};\r\n\r\nexport const setHistory = (history) => ({\r\n  type: types.SET_HISTORY,\r\n  history,\r\n});\r\n\r\nexport const setLocation = (address, coordinates) => ({\r\n  type: types.SET_LOCATION,\r\n  address,\r\n  coordinates,\r\n});\r\n\r\nexport const setWeather = (weather) => ({\r\n  type: types.SET_WEATHER,\r\n  weather,\r\n});\r\n\r\nexport const error = (msg) => {\r\n  Alert.alert(\"Error :(\", msg);\r\n  return {\r\n    type: types.ERROR,\r\n  };\r\n};\r\n\r\nexport const getForecast = () => (dispatch) => {\r\n  Geolocation.getCurrentPosition(\r\n    async (position) => {\r\n      try {\r\n        const forecast = await getAddressFromCoordinates(\r\n          position.coords.latitude,\r\n          position.coords.longitude\r\n        );\r\n        dispatch(setLocation(forecast.Address.Label, forecast.DisplayPosition));\r\n        const weather = await getWeather(\r\n          forecast.DisplayPosition.Latitude,\r\n          forecast.DisplayPosition.Longitude\r\n        );\r\n        dispatch(setWeather(weather.fact));\r\n        dispatch(\r\n          addToHistory({\r\n            location: forecast.DisplayPosition,\r\n            address: forecast.Address.Label,\r\n            weather: weather.fact,\r\n            time: Date.now(),\r\n          })\r\n        );\r\n      } catch (e) {\r\n        Alert.alert(\"Error :(\", \"check your internet connection\");\r\n        console.error(\"Error(addToHistory)\", \"check your internet connection\");\r\n      }\r\n    },\r\n    (e) => {\r\n      Alert.alert(\"Error(getForecast)\", e.message)\r\n      console.error(\"Error(addToHistory)\", e.message);\r\n    },\r\n    {\r\n      enableHighAccuracy: false,\r\n      timeout: 10000,\r\n      maximumAge: 100000,\r\n    }\r\n  );\r\n};\r\n","export const historySelector = state => state.forecast.history;\r\nexport const forecastSelector = state => state.forecast;\r\nexport const locationSelector = state => state.forecast.location;","import React, { useEffect } from \"react\";\r\nimport WeatherPage from \"./weather-page\";\r\nimport { getForecast } from \"../../redux/actions/actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { locationSelector } from \"../../redux/selectors\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction WeatherPageContainer({ location, getForecast }) {\r\n  useEffect(() => {\r\n    getForecast();\r\n  }, []);\r\n  return (\r\n    <WeatherPage\r\n      address={location.address}\r\n      weather={location.weather}\r\n      coordinates={location.coordinates}\r\n    />\r\n  );\r\n};\r\n\r\nWeatherPageContainer.propTypes = {\r\n  location: PropTypes.exact({\r\n    coordinates: PropTypes.exact({\r\n      Latitude: PropTypes.number.isRequired,\r\n      Longitude: PropTypes.number.isRequired\r\n    }),\r\n    address: PropTypes.string.isRequired,\r\n    weather: PropTypes.object.isRequired\r\n  }),\r\n  getForecast: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapState = (state) => ({\r\n  location: locationSelector(state),\r\n});\r\n\r\nexport default connect(mapState, { getForecast })(WeatherPageContainer);\r\n","import React from \"react\";\r\nimport { StyleSheet, Text, View, TouchableOpacity } from \"react-native\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function TablePageElement({ item, onPress }) {\r\n  const coordinates = `${item.location.Latitude}, ${item.location.Longitude}`;\r\n  return (\r\n    <TouchableOpacity\r\n      style={styles.container}\r\n      onPress={() => onPress(item.time)}\r\n    >\r\n      <Text style={styles.coordinates}>{coordinates}</Text>\r\n      <View style={styles.info}>\r\n        <Text style={styles.address}>{item.address}</Text>\r\n        <Text style={styles.time}>{new Date(item.time).toISOString()}</Text>\r\n      </View>\r\n    </TouchableOpacity>\r\n  );\r\n}\r\n\r\nTablePageElement.propTypes = {\r\n  item: PropTypes.exact({\r\n    location: PropTypes.exact({\r\n      Latitude: PropTypes.number.isRequired,\r\n      Longitude: PropTypes.number.isRequired\r\n    }),\r\n    address: PropTypes.string.isRequired,\r\n    weather: PropTypes.object.isRequired,\r\n    time: PropTypes.number.isRequired\r\n  }),\r\n  onPress: PropTypes.func.isRequired\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    width: \"300px\",\r\n    height: \"100px\",\r\n    padding: 5,\r\n    marginBottom: 10,\r\n    display: \"flex\",\r\n    backgroundColor: \"#f0f\",\r\n    alignItems: \"flex-end\",\r\n    justifyContent: \"space-evenly\",\r\n    backgroundColor: \"rgba(255, 255, 255, 0.2)\",\r\n    borderRadius: \"5px\",\r\n  },\r\n  info: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-around\",\r\n  },\r\n  time: {\r\n    width: \"115px\",\r\n  },\r\n  address: {\r\n    width: \"175px\",\r\n  },\r\n  coordinates: {\r\n    fontSize: \"0.7rem\",\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport { StyleSheet, SafeAreaView, Button } from \"react-native\";\r\nimport { FlatList } from \"react-native-gesture-handler\";\r\nimport TablePageElement from \"./__element/table-page__element\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function TablePage({ history, clearHistory, onPress }) {\r\n  const item = ({ item }) => <TablePageElement onPress={onPress} item={item} />;\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <FlatList\r\n        style={styles.list}\r\n        data={history}\r\n        renderItem={item}\r\n        keyExtractor={(e) => e.time.toString()}\r\n      />\r\n      <Button onPress={clearHistory} title=\"Clean history\" color=\"#005fad\" />\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\nTablePage.propTypes = {\r\n  history: PropTypes.arrayOf({\r\n    location: PropTypes.exact({\r\n      Latitude: PropTypes.number.isRequired,\r\n      Longitude: PropTypes.number.isRequired,\r\n    }),\r\n    address: PropTypes.string.isRequired,\r\n    weather: PropTypes.object.isRequired,\r\n    time: PropTypes.number.isRequired,\r\n  }),\r\n  clearHistory: PropTypes.func.isRequired,\r\n  onPress: PropTypes.func.isRequired\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    paddingTop: 10,\r\n    flex: 1,\r\n    backgroundImage: \"linear-gradient(141deg, #a1c4fd 0%, #c2e9fb 75%)\",\r\n  },\r\n  list: {\r\n    marginBottom: 10,\r\n    alignSelf: \"center\",\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport { View, StyleSheet } from \"react-native\";\r\nimport TextContainer from \"../text-container/text-container\";\r\n\r\nexport default function TablePageEmpty() {\r\n  return (\r\n    <View style={styles.container}>\r\n      <TextContainer style={styles.content}>It's empty :(</TextContainer>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundImage: \"linear-gradient(to top, #ace0f9 0%, #a1c4fd 100%)\"\r\n  },\r\n  content: {\r\n    padding: \"5px\",\r\n    fontSize: \"1.3rem\",\r\n  },\r\n});\r\n","import React, { useState } from \"react\";\r\nimport TablePage from \"./table-page\";\r\nimport { connect } from \"react-redux\";\r\nimport { historySelector } from \"../../redux/selectors\";\r\nimport TablePageEmpty from \"./table-page-empty\";\r\nimport { clearHistory } from \"../../redux/actions/actions\";\r\nimport { View, Button } from \"react-native\";\r\nimport WeatherPage from \"../weather-page/weather-page\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction TablePageContainer({ history, clearHistory }) {\r\n  const [openedId, setOpenedId] = useState(null);\r\n  if (openedId) {\r\n    const note = history.filter((e) => e.time === openedId)[0];\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        <WeatherPage\r\n          address={note.address}\r\n          coordinates={note.location}\r\n          weather={note.weather}\r\n        />\r\n        <Button\r\n          title=\"Close\"\r\n          color=\"#005fad\"\r\n          onPress={() => setOpenedId(null)}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n  if (!history.length) return <TablePageEmpty />;\r\n  return (\r\n    <TablePage\r\n      history={history}\r\n      clearHistory={clearHistory}\r\n      onPress={(id) => setOpenedId(id)}\r\n    />\r\n  );\r\n}\r\n\r\nTablePage.propTypes = {\r\n  history: PropTypes.arrayOf({\r\n    location: PropTypes.exact({\r\n      Latitude: PropTypes.number.isRequired,\r\n      Longitude: PropTypes.number.isRequired,\r\n    }),\r\n    address: PropTypes.string.isRequired,\r\n    weather: PropTypes.object.isRequired,\r\n    time: PropTypes.number.isRequired,\r\n  }),\r\n  clearHistory: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapState = (state) => ({\r\n  history: historySelector(state),\r\n});\r\n\r\nexport default connect(mapState, { clearHistory })(TablePageContainer);\r\n","import produce from \"immer\";\r\nimport { types } from \"../actions/types\";\r\n\r\nconst init = {\r\n  location: {\r\n    address: \"\",\r\n    weather: null,\r\n    coordinates: null,\r\n  },\r\n  history: [],\r\n};\r\n\r\nexport const forecast = produce((draft, action) => {\r\n  switch (action.type) {\r\n    case types.SET_HISTORY:\r\n      draft.history = action.history;\r\n      return draft;\r\n    case types.CLEAR_HISTORY:\r\n      draft.history = [];\r\n      return draft;\r\n    case types.ADD_TO_HISTORY:\r\n      draft.location = action.payload;\r\n      return draft;\r\n    case types.SET_LOCATION:\r\n      draft.location.coordinates = action.coordinates;\r\n      draft.location.address = action.address;\r\n      return draft;\r\n    case types.SET_WEATHER:\r\n      draft.location.weather = action.weather;\r\n      return draft;\r\n    default:\r\n      return draft;\r\n  }\r\n}, init);\r\n","import { forecast } from \"./forecast-reducer\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    forecast\r\n})","import thunkMiddleware from 'redux-thunk';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly'; \r\nimport { rootReducer } from './reducers/root-reducer';\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(thunkMiddleware))\r\n);","import React from \"react\";\r\nimport { StyleSheet } from \"react-native\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport Icons from \"react-native-vector-icons/MaterialCommunityIcons\";\r\nimport WeatherPageContainer from \"./components/weather-page/weather-page-container\";\r\nimport TablePageContainer from \"./components/table-page/table-page-container\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./redux/store\";\r\n\r\nimport \"react-native-gesture-handler\";\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nexport default function App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <NavigationContainer>\r\n        <Tab.Navigator\r\n          initialRouteName=\"Weather\"\r\n          tabBarOptions={{\r\n            activeTintColor: \"#005fad\",\r\n          }}\r\n        >\r\n          <Tab.Screen\r\n            name=\"Weather\"\r\n            component={WeatherPageContainer}\r\n            options={{\r\n              tabBarLabel: \"Weather\",\r\n              tabBarIcon: ({ color, size }) => (\r\n                <Icons name=\"apple-icloud\" color={color} size={size} />\r\n              ),\r\n            }}\r\n          />\r\n          <Tab.Screen\r\n            name=\"History\"\r\n            component={TablePageContainer}\r\n            options={{\r\n              tabBarLabel: \"History\",\r\n              tabBarIcon: ({ color, size }) => (\r\n                <Icons name=\"history\" color={color} size={size} />\r\n              ),\r\n            }}\r\n          />\r\n        </Tab.Navigator>\r\n      </NavigationContainer>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n});\r\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/dnagafonov/native-weather/expo-service-worker.js', { scope: '/dnagafonov/native-weather/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}